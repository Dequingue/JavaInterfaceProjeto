/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;


import javax.swing.JOptionPane;
import java.sql.*;
import DAO.Conexao;
import DAO.ProdutosDAO;

import DTO.ProdutoComCategoriaDTO;
import DTO.SessaoUsuario;

import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pichau
 */
public class TelaGerenciarProduto extends javax.swing.JFrame {
    Connection con;
     PreparedStatement ps;
     ResultSet rs;
    /**
     * Creates new form GerenciarProduto
     */
    public TelaGerenciarProduto() {
        initComponents();
        listarProdutos();
    }

    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProdutos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNomeProduto = new javax.swing.JTextField();
        txtQuantidadeProduto = new javax.swing.JTextField();
        txtPrecoProduto = new javax.swing.JTextField();
        txtDescricaoProduto = new javax.swing.JTextField();
        btnSalvarProduto = new javax.swing.JButton();
        btnAtualizarProduto = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        btnRemoverProduto = new javax.swing.JButton();
        txtCategoria = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscarProduto = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        btnCaregarCampos = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtUserNome = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCat = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();

        jTextField4.setText("jTextField1");

        jTextField5.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tableProdutos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ID_CATEGORIA", "Id_USUARIO", "NOME_USUARIO", "NOME", "QUANTIDADE", "PREÇO", "DESCRIÇÃO", "NOME CATEGORIA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProdutos);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("GERENCIAR PRODUTO");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("NOME");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("QUANTIDADE");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("PREÇO");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("DESCRIÇÃO");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("CATEGORIA");

        txtNomeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdutoActionPerformed(evt);
            }
        });

        txtQuantidadeProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeProdutoActionPerformed(evt);
            }
        });

        txtPrecoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoProdutoActionPerformed(evt);
            }
        });

        txtDescricaoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoProdutoActionPerformed(evt);
            }
        });

        btnSalvarProduto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnSalvarProduto.setText("SALVAR");
        btnSalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarProdutoActionPerformed(evt);
            }
        });

        btnAtualizarProduto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAtualizarProduto.setText("ATUALIZAR");
        btnAtualizarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarProdutoActionPerformed(evt);
            }
        });

        btnFechar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnFechar.setText("FECHAR");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnRemoverProduto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnRemoverProduto.setText("REMOVER");
        btnRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverProdutoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("PROCURAR PRODUTO");

        txtBuscar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtBuscar.setForeground(new java.awt.Color(0, 102, 0));
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        btnBuscarProduto.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnBuscarProduto.setText("BUSCAR");
        btnBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProdutoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("ID");

        txtid.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtid.setEnabled(false);

        btnCaregarCampos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCaregarCampos.setText("Carregar Campos");
        btnCaregarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaregarCamposActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("ID_CATEGORIA");

        txtUserNome.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("NOME_USER");

        txtCat.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("ID_USER");

        txtUser.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1026, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtid)
                                                .addComponent(txtCat, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCaregarCampos)
                                        .addGap(57, 57, 57))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel10)
                                                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtUserNome, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPrecoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtCategoria, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtDescricaoProduto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel2)
                                            .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnSalvarProduto)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAtualizarProduto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnRemoverProduto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnFechar))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addGap(167, 167, 167)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarProduto))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addGap(238, 238, 238)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(txtCat, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCaregarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtUserNome, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(txtQuantidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPrecoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalvarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAtualizarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRemoverProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //CAMPO PARA DIGITAR A QUANTIDADE DE PRODUTOS
    private void txtQuantidadeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeProdutoActionPerformed

        
    }//GEN-LAST:event_txtQuantidadeProdutoActionPerformed

    //CAMPO PARA DIGITAR O PREÇO DOS PRODUTOS
    private void txtPrecoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoProdutoActionPerformed

        
    }//GEN-LAST:event_txtPrecoProdutoActionPerformed

    //CAMPO PARA DIGITAR O NOME DO PRODUTO
    private void txtNomeProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdutoActionPerformed

        
    }//GEN-LAST:event_txtNomeProdutoActionPerformed

    //CAMPO PARA DIGITAR A DESCRIÇAO DO PRODUTO
    private void txtDescricaoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoProdutoActionPerformed
 
        
    }//GEN-LAST:event_txtDescricaoProdutoActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        home2 home =new home2();
        home.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverProdutoActionPerformed
        // TODO add your handling code here:
        Excluir();
        listarProdutos();
        LimparCampo();
        
    }//GEN-LAST:event_btnRemoverProdutoActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_formComponentShown

    private void btnSalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarProdutoActionPerformed
        // TODO add your handling code here:
        cadastrarProdutos();  
        listarProdutos();
       
        LimparCampo();
        carregarCampos();
        
    }//GEN-LAST:event_btnSalvarProdutoActionPerformed

    private void tableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProdutosMouseClicked
        // TODO add your handling code here:
        if(tableProdutos.getSelectedRow() != -1){
            txtNomeProduto.setText(tableProdutos.getValueAt(tableProdutos.getSelectedRow(),0).toString());
            txtQuantidadeProduto.setText(tableProdutos.getValueAt(tableProdutos.getSelectedRow(),1).toString());
            txtPrecoProduto.setText(tableProdutos.getValueAt(tableProdutos.getSelectedRow(),2).toString());
            txtDescricaoProduto.setText(tableProdutos.getValueAt(tableProdutos.getSelectedRow(),3).toString());
            txtCategoria.setText(tableProdutos.getValueAt(tableProdutos.getSelectedRow(),4).toString());
            
        }
        
        carregarCampos();
        
     
    }//GEN-LAST:event_tableProdutosMouseClicked

    private void btnAtualizarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarProdutoActionPerformed
        // TODO add your handling code here:
        atualizar();  
        listarProdutos();
        LimparCampo();
    }//GEN-LAST:event_btnAtualizarProdutoActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProdutoActionPerformed
        // TODO add your handling code here:
        buscarProdutos();
       
        LimparCampo();
               
        
    }//GEN-LAST:event_btnBuscarProdutoActionPerformed

    private void btnCaregarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaregarCamposActionPerformed
        // TODO add your handling code here:
        carregarCampos();
    }//GEN-LAST:event_btnCaregarCamposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaGerenciarProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarProduto;
    private javax.swing.JButton btnBuscarProduto;
    private javax.swing.JButton btnCaregarCampos;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnRemoverProduto;
    private javax.swing.JButton btnSalvarProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable tableProdutos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCat;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtDescricaoProduto;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtPrecoProduto;
    private javax.swing.JTextField txtQuantidadeProduto;
    private javax.swing.JTextField txtUser;
    private javax.swing.JTextField txtUserNome;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
    
private void cadastrarProdutos(){
// Divide a categoria e pega o ID (supondo que o formato seja "1-Eletrônicos")
        String nome = txtNomeProduto.getText();
        String descricao = txtDescricaoProduto.getText();
        String quantidadeStr = txtQuantidadeProduto.getText();
        String precoStr = txtPrecoProduto.getText();
        String categoria = txtCategoria.getText();
// Conversões com tratamento de erro
        // Verificação se algum campo está vazio
    if (nome.isEmpty() || descricao.isEmpty() || quantidadeStr.isEmpty() || precoStr.isEmpty() || categoria.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos antes de salvar.");
        return; // Interrompe o método se tiver campo vazio
    }
       try {
        
 
        int quantidade = Integer.parseInt(quantidadeStr);
        double preco = Double.parseDouble(precoStr); // corrigido de Integer para Double
//salva na tabela produtos
        ProdutoComCategoriaDTO objprodutosdto = new ProdutoComCategoriaDTO();
        objprodutosdto.setNome_produto(nome);
        objprodutosdto.setQuantidade_produto(quantidade);
        objprodutosdto.setPreco_produto(preco);
        objprodutosdto.setDescricao_produto(descricao);
        
        objprodutosdto.setNome_categoria(categoria);
        

    // Chamada correta para salvar no banco:
        ProdutosDAO dao = new ProdutosDAO();
        dao.cadastrarProdutoComCategoria(objprodutosdto);
         // ESSA LINHA FALTAVA
// salva na tabela categoria
        
       
        JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso");
        
        
        // colocando na tabela
           DefaultTableModel tb = (DefaultTableModel) tableProdutos.getModel();
           Object [] dados = {txtNomeProduto.getText(),txtQuantidadeProduto.getText(),txtPrecoProduto.getText(),txtDescricaoProduto.getText(),txtCategoria.getText()};
           tb.addRow(dados);
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Erro ao converter valores numéricos: " + e.getMessage());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao salvar produto: " + e.getMessage());
    }

    }

   private void listarProdutos(){
        try {
        ProdutosDAO objProdutosDAO = new ProdutosDAO();
        DefaultTableModel model = (DefaultTableModel) tableProdutos.getModel();
        model.setNumRows(0);
        
        int idUsuarioLogado = SessaoUsuario.getIdUsuario();
        ArrayList<ProdutoComCategoriaDTO> lista = objProdutosDAO.listarProdutosComCategoria(idUsuarioLogado);

        for (ProdutoComCategoriaDTO dto : lista) {
            model.addRow(new Object[]{
                dto.getId_produto(),
                dto.getId_categoria(),
                dto.getId_usuario(),
                dto.getNome_usuario(),
                dto.getNome_produto(),
                dto.getQuantidade_produto(),
                dto.getPreco_produto(),
                dto.getDescricao_produto(),
                dto.getNome_categoria()
                         // novo
                       // novo
            });
        }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Erro no listarProdutos telaGerenciar: " + e);
        }
   }
   
   private void carregarCampos(){
      int setar = tableProdutos.getSelectedRow();
      txtid.setText(tableProdutos.getModel().getValueAt(setar, 0).toString());
      txtCat.setText(tableProdutos.getModel().getValueAt(setar, 1).toString());
      txtUser.setText(tableProdutos.getModel().getValueAt(setar, 2).toString());
      txtUserNome.setText(tableProdutos.getModel().getValueAt(setar, 3).toString());
      txtNomeProduto.setText(tableProdutos.getModel().getValueAt(setar, 4).toString());
      txtQuantidadeProduto.setText(tableProdutos.getModel().getValueAt(setar, 5).toString());
      txtPrecoProduto.setText(tableProdutos.getModel().getValueAt(setar, 6).toString());
      txtDescricaoProduto.setText(tableProdutos.getModel().getValueAt(setar, 7).toString());
      txtCategoria.setText(tableProdutos.getModel().getValueAt(setar, 8).toString());
      
   }
   
   private void LimparCampo(){
       txtid.setText("");
       txtUserNome.setText("");
       txtNomeProduto.setText("");
       txtQuantidadeProduto.setText("");
       txtPrecoProduto.setText("");
       txtDescricaoProduto.setText("");
       txtCategoria.setText("");
       txtNomeProduto.requestFocus();
       txtBuscar.setText("");
   }
   
private void atualizar(){
       int id_produto,quantidade,id_categoria;
       String nome,descricao,categoria;
       double preco;
       
           // Verificação dos campos obrigatórios
    if (txtid.getText().trim().isEmpty() || txtUserNome.getText().trim().isEmpty() ||
        txtNomeProduto.getText().trim().isEmpty() || txtQuantidadeProduto.getText().trim().isEmpty() ||
        txtPrecoProduto.getText().trim().isEmpty() || txtDescricaoProduto.getText().trim().isEmpty() ||
        txtCategoria.getText().trim().isEmpty()) {

        JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos antes de atualizar.");
        return;
    }
       
       
       try {
            id_categoria = Integer.parseInt(txtUserNome.getText());
            id_produto = Integer.parseInt(txtid.getText());
            preco = Double.parseDouble(txtPrecoProduto.getText());
            quantidade = Integer.parseInt(txtQuantidadeProduto.getText());
       
            nome = txtNomeProduto.getText();
            descricao = txtDescricaoProduto.getText();
            categoria = txtCategoria.getText();
       
 
            ProdutoComCategoriaDTO objProdutosdto =new ProdutoComCategoriaDTO();
       
            objProdutosdto.setId_produto(id_produto);
            objProdutosdto.setNome_produto(nome);
            objProdutosdto.setQuantidade_produto(quantidade);
            objProdutosdto.setPreco_produto(preco);
            objProdutosdto.setDescricao_produto(descricao);
       
            objProdutosdto.setId_categoria(id_categoria);
            objProdutosdto.setNome_categoria(categoria);
       
            ProdutosDAO objprodutodao = new ProdutosDAO();
            objprodutodao.atualizarProdutos(objProdutosdto);
            
            JOptionPane.showMessageDialog(null, "Atualizado com sucesso");
        } catch (Exception e) {
           JOptionPane.showMessageDialog(null, "Erro ao Atualizar"+e);
        }
     
       
   }

private void Excluir(){
    if (txtid.getText().isEmpty() || txtUserNome.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Preencha os campos de ID do produto e da categoria!");
        return;
    }
    try{
        int id_produto = Integer.parseInt(txtid.getText());
        int id_categoria = Integer.parseInt(txtUserNome.getText()); // <-- aqui estava faltando

        ProdutoComCategoriaDTO objProdutoComCategoriadto = new ProdutoComCategoriaDTO();
        objProdutoComCategoriadto.setId_produto(id_produto);
        objProdutoComCategoriadto.setId_categoria(id_categoria);

        ProdutosDAO objprodutodao = new ProdutosDAO();
        objprodutodao.ExcluindoProdutos(objProdutoComCategoriadto);

        JOptionPane.showMessageDialog(null, "Produto excluído com sucesso");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Erro ao converter ID: " + e.getMessage());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao excluir produto: " + e.getMessage());
    }
}


private void buscarProdutos(){
    String nomeProduto = txtBuscar.getText();  // Campo de texto com o nome a ser buscado
    try {
        ProdutosDAO objProdutosDAO = new ProdutosDAO();
        int idUsuarioLogado = SessaoUsuario.getIdUsuario();
        ArrayList<ProdutoComCategoriaDTO> lista = objProdutosDAO.pesquisarProduto(nomeProduto, idUsuarioLogado);
        
        DefaultTableModel modeloTabela = (DefaultTableModel) tableProdutos.getModel();
        modeloTabela.setRowCount(0);  // Limpa a tabela

        for (ProdutoComCategoriaDTO produto : lista) {
            modeloTabela.addRow(new Object[]{
                produto.getId_produto(),
                produto.getId_categoria(),
                produto.getId_usuario(),
                produto.getNome_usuario(),
                produto.getNome_produto(),
                produto.getQuantidade_produto(),
                produto.getPreco_produto(),
                produto.getDescricao_produto(),
                produto.getNome_categoria()

            });
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao pesquisar produto: " + e.getMessage());
    }
}


}